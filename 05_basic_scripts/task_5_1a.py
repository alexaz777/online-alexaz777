# -*- coding: utf-8 -*-
'''
Задание 5.1a

Всё, как в задании 5.1. Но, если пользователь ввел адрес хоста, а не адрес сети,
то надо адрес хоста преобразовать в адрес сети и вывести адрес сети и маску, как в задании 5.1.

Пример адреса сети (все биты хостовой части равны нулю):
* 10.0.1.0/24
* 190.1.0.0/16

Пример адреса хоста:
* 10.0.1.1/24 - хост из сети 10.0.1.0/24
* 10.0.5.1/30 - хост из сети 10.0.5.0/30

Если пользователь ввел адрес 10.0.1.1/24,
вывод должен быть таким:

Network:
10        0         1         0
00001010  00000000  00000001  00000000

Mask:
/24
255       255       255       0
11111111  11111111  11111111  00000000

Проверить работу скрипта на разных комбинациях сеть/маска.

Ограничение: Все задания надо выполнять используя только пройденные темы.

'''
#Решение
ip = input('Введите IP-сеть в формате x.x.x.x/yy:    ')
a = ip.split('/')
a1 = a[0].split('.')
b = [int(vlan) for vlan in a1]
b[0] = '{:08b}'.format(b[0])
b[1] = '{:08b}'.format(b[1])
b[2] = '{:08b}'.format(b[2])
b[3] = '{:08b}'.format(b[3])
m_bin = '1' * int(a[1]) + '0' * (32 - int(a[1]))
m0 = int(m_bin[0:8], 2)
m1 = int(m_bin[8:16], 2)
m2 = int(m_bin[16:24], 2)
m3 = int(m_bin[24:32], 2)
b_net_bin = bin(int(m_bin, 2) & int(''.join(b), 2))[2:].zfill(32)
b_net_0 = int(b_net_bin[0:8], 2)
b_net_1 = int(b_net_bin[8:16], 2)
b_net_2 = int(b_net_bin[16:24], 2)
b_net_3 = int(b_net_bin[24:32], 2)
print('Network:' + '\n' + '{:<10} {:<10} {:<10} {:<10}'.format(b_net_0, b_net_1, b_net_2, b_net_3))
print('{:<10} {:<10} {:<10} {:<10}'.format(b_net_bin[0:8], b_net_bin[8:16], b_net_bin[16:24], b_net_bin[24:32]))
print ('\n')
print('Mask : ')
print('/' + a[1])
print('{:10} {:10} {:10} {:10}'.format(str(m0), str(m1), str(m2), str(m3)))
print('{:10} {:10} {:10} {:10}'.format(m_bin[0:8], m_bin[8:16], m_bin[16:24], m_bin[24:32]))

